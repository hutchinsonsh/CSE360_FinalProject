package finalprojectcse360;


import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Observable;
import java.util.Scanner;

import java.util.Observable;
import java.util.ArrayList;
import java.io.FileWriter;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.util.ArrayList; 
import java.awt.Color;   
import javax.swing.JFrame;  
import javax.swing.SwingUtilities;  
import javax.swing.WindowConstants;  

import org.jfree.chart.ChartFactory;  
import org.jfree.chart.ChartPanel;  
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;  
import org.jfree.data.xy.XYDataset;  
import org.jfree.data.xy.XYSeries;  
import org.jfree.data.xy.XYSeriesCollection;â€©

public class Roster extends Observable {

    private ArrayList<ArrayList<String>> rosterList;
    private int rosterSize;

    // constructor class
    public Roster() {
        rosterList = new ArrayList<ArrayList<String>>(0);
        rosterSize = 0;
    }

    public ArrayList<ArrayList<String>> getRoster() {
        return rosterList;
    }

    public void load(String cvs) throws IOException {
        Scanner input = new Scanner(new File(cvs));
        String[] tempArr;
        String tempStr;

        while (input.hasNextLine()) {
            ArrayList<String> row = new ArrayList<>();
            tempStr = input.nextLine();
            tempArr = tempStr.split(",");
            Collections.addAll(row, tempArr);
            rosterList.add(row);
        }
    }

//-------------------------------------------------------------------------------------------------------------------
// Omar's new code includes load roster, add attendance, compare attendance to roster, and dialog box 
// 
// can't print the last line in the dialog box properly because the way I did it doesn't let me output a linkedlist
// we need to find a way to print contents of a linked list on the dialog box. Help needed
// All information is avaliable just stuck on displaying it on the dialog box
//--------------------------------------------------------------------------------------------------------------------
    public void add(String csvFile) throws IOException {

        Scanner input = new Scanner(new File(csvFile));
        ArrayList<ArrayList<String>> attendanceList = new ArrayList<>();

        String[] tempArr;
        String tempStr;

        while (input.hasNextLine()) {
            ArrayList<String> row = new ArrayList<>();
            tempStr = input.nextLine();
            tempArr = tempStr.split(",");
            Collections.addAll(row, tempArr);
            attendanceList.add(row);
        }

        for (int i = 0; i < attendanceList.size(); i++) {
            for (int j = i + 1; j < attendanceList.size() - 1; j++) {
                if (attendanceList.get(i).get(0).contentEquals(attendanceList.get(j).get(0))) {
                    int one = Integer.parseInt(attendanceList.get(i).get(1));
                    int two = Integer.parseInt(attendanceList.get(j).get(1));
                    int three = one + two;
                    String str = Integer.toString(three);
                    ArrayList<String> temp = new ArrayList();
                    temp.add(attendanceList.get(i).get(0));
                    temp.add(str);
                    attendanceList.set(i, temp);
                    attendanceList.remove(j);

                }
            }
        }

        int count = rosterList.get(0).size();
        int addAtt = 0;
        for (int i = 0; i < rosterList.size(); i++) {
            for (int j = 0; j < attendanceList.size(); j++) {
                if (rosterList.get(i).get(5).equals(attendanceList.get(j).get(0))) {
                    ((ArrayList) rosterList.get(i)).add(attendanceList.get(j).get(1));
                    attendanceList.remove(j);
                    addAtt++;
                }
            }
        }

        // for all the people in the roster who did not show up to class, puts their time as '0'
        // without this, the 
        for (int i = 0; i < rosterList.size(); i++) {
            if (rosterList.get(i).size() == count) {
                ((ArrayList) rosterList.get(i)).add("0");
            }
        }
        /*
                for(int i = 0; i < rosterList.size(); i++)
                {
                    for(int j = 0; j < rosterList.get(i).size(); j++)
                    {
                        System.out.print(rosterList.get(i).get(j) + " ");
                    }
                    System.out.println();
                }
	        
	        System.out.println(attendanceList.size());
         */
        
        if(attendanceList.size()==0)
            JOptionPane.showMessageDialog(null, "Data is loaded for " + addAtt + " users in the roster.\nNo additional attendees were found");
        else if(attendanceList.size()==1)
            JOptionPane.showMessageDialog(null, "Data is loaded for " + addAtt + " users in the roster.\n1 additional attendee was found:\n" + attendanceList.get(0).get(0)+ " connected for " + attendanceList.get(0).get(1) + " minutes");
        else
            JOptionPane.showMessageDialog(null, "Data is loaded for " + addAtt + " users in the roster.\n"+ attendanceList.size()+ " additional attendees were found");

    }

    // I'll add comments later; creats file and writes each element w/ comma separating them
    public void save() throws IOException {
        File file = new File("saveRoster.cvs");
        file.createNewFile();
        FileWriter writer = new FileWriter(file);
        for (int i = 0; i < rosterList.size(); i++) {
            for (int j = 0; j < rosterList.get(i).size(); j++) {
                writer.write(rosterList.get(i).get(j) + ",");
            }
        }
        writer.close();
    }

  public void plot()
  {
    //XYDataset dataset = createDataset();
		XYSeriesCollection dataset = new XYSeriesCollection();  //x is % attendance, so (minAttended*10)/75
		  							//y is number in that x
	     
		//ASSUMPTIONS:
		//			attendace starts at column 6 (j = 6)
		// 			row 0 is headers (new XYSeries(rosterList.get(0).get(j)) and (i = 1),  i do believe this is wrong
	    double attendance;	    
    	for(int j = 6; j < rosterList.get(0).size(); j++) //go through each column of attendance
    	{
    		int count1=0, count2=0, count3=0, count4=0, count5=0, count6=0, count7=0, count8=0, count9=0, count10=0;
    		//maybe issue with using "series1" for each series???
    	    XYSeries series1 = new XYSeries(rosterList.get(0).get(j));  //XYSeries("date"), date depends on assumption
    		for(int i = 1; i < rosterList.size(); i++) //start either i = 0 or i = 1, depends on assumption
    		{
	    		attendance = ((rosterList.get(i).get(j))*10)/75;
	    		if (attendance < 1.5)
	    		{
	    			count1++;
	    		}
	    		else if (attendance < 2.5)
	    		{
	    			count2++;
	    		}
	    		else if (attendance < 3.5)
	    		{
	    			count3++;
	    		}
	    		else if (attendance < 4.5)
	    		{
	    			count4++;
	    		}
	    		else if (attendance < 5.5)
	    		{
	    			count5++;
	    		}
	    		else if (attendance < 6.5)
	    		{
	    			count6++;
	    		}
	    		else if (attendance < 7.5)
	    		{
	    			count7++;
	    		}
	    		else if (attendance < 8.5)
	    		{
	    			count8++;
	    		}
	    		else if (attendance < 9.5)
	    		{
	    			count9++;
	    		}
	    		else if (attendance >= 9.5)
	    		{
	    			count10++;
	    		}
	    		else {}
	    	}
    		series1.add(1.0,count1);
    		series1.add(2.0,count2);
    		series1.add(3.0,count3);
    		series1.add(4.0,count4);
    		series1.add(5.0,count5);
    		series1.add(6.0,count6);
    		series1.add(7.0,count7);
    		series1.add(8.0,count8);
    		series1.add(9.0,count9);
    		series1.add(10.0,count10);
    		
    		dataset.addSeries(series1);
	    }
	    
    	//XYDataset fullSet = dataset;    //if createScatterPlot requires XYDataset instead of XYCollectionSeries
    	
	    // Create chart  
	    JFreeChart chart = ChartFactory.createScatterPlot(  
	        "Student Attendance",   
	        "X-Axis", "Count", dataset, PlotOrientation.HORIZONTAL, true, true, false);  
	  
	      
	    //Changes background color  
	    XYPlot plot = (XYPlot)chart.getPlot();  
	    plot.setBackgroundPaint(new Color(255,228,196));  
	      
	     
	    // Create Panel  
	    ChartPanel panel = new ChartPanel(chart);  
	    setContentPane(panel); 
	    
	    PlotData example = new PlotData("Scatter Chart Example");  
		     example.setSize(800, 400);  
		      example.setLocationRelativeTo(null);  
		     example.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);  
		      example.setVisible(true);  
  }

}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalprojectcse360;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;

public class FinalProjectCSE360 extends JFrame implements ActionListener {

    Roster roster = new Roster();
    JMenuItem load, add, save, plot, team;
    JPanel panel;
    JDialog dial;
    JLabel label1;

    JButton btn;
    JFrame frame;
    JComboBox<String> m;
    JComboBox<Integer> d;

    int day;
    String month;

    JTable table;
    DefaultTableModel model;
    JScrollPane scroll;

    String[] headers = {"ID", "First Name", "Last Name", "Program", "Level", "ASURITE"};
    String[][] data;

    int n = 0;

    public FinalProjectCSE360() {
        JFrame frame = new JFrame("Menu");
        frame.setSize(700, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        panel = new JPanel();
        panel.setLayout(new BorderLayout());

        JMenuBar menu = new JMenuBar();
        frame.setJMenuBar(menu);

        JMenu file = new JMenu("File");
        menu.add(file);

        JMenu about = new JMenu("About");
        menu.add(about);

        team = new JMenuItem("Team Info");
        team.addActionListener(this);

        load = new JMenuItem("Load a Roster");
        load.addActionListener(this);

        add = new JMenuItem("Add Attendance");
        add.addActionListener(this);

        save = new JMenuItem("Save");
        save.addActionListener(this);

        plot = new JMenuItem("Plot Data");
        plot.addActionListener(this);

        table = new JTable();
        model = (DefaultTableModel) table.getModel();
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        scroll = new JScrollPane(table);
        scroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        panel.add(scroll, BorderLayout.CENTER);
        panel.revalidate();

        file.add(load);
        file.add(add);
        file.add(save);
        file.add(plot);
        about.add(team);

        dial = new JDialog(frame, "Team Info");
        dial.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dial.setSize(600, 200);
        dial.setLocationRelativeTo(frame);
        label1 = new JLabel("Team Members: Omar Al-Sharif,\r\n" + 
          		" Riley Barrett,\r\n" + 
          		" Sarah Hills,\r\n" + 
          		" Divine Lee,\r\n" + 
          		" & Heman Sran\r\n" + 
          		"");
        dial.add(label1);

        frame.getContentPane().add(panel);
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        FinalProjectCSE360 world = new FinalProjectCSE360();
    }

        /* Author: Sarah Hills
     * This method responds to all button presses/actions that occur
     *
     * @param e
     * @return void
     */
    public void actionPerformed(ActionEvent e) {
        //load button: calls getCVS, sends results to roster.load(); calls addRow()
        if (e.getSource() == load) {
            if (!roster.getRoster().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Cannot add new roster. Roster already exists.");
            } else {
                String cvs = getCVS();
                if (!cvs.equalsIgnoreCase("canceled")) {
                    try {
                        roster.load(cvs);
                        addRow();
                    } catch (IOException ex) {
                        Logger.getLogger(FinalProjectCSE360.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        //team button: prints out team information
        if (e.getSource() == team) {
            dial.setVisible(true);
        }
        // for attendance; add button: calls pickdate()
        if (e.getSource() == add) {
            if (roster.getRoster().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Cannot add attendance. Roster does not exist");
            } else {
                PickDate();
            }
        }
        //save button: calls roster.save()
        if (e.getSource() == save) {
            try {
                if (roster.getRoster().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Cannot save roster. Roster does not exist");
                } else {
                    roster.save(headers);
                }
            } catch (IOException ex) {
                Logger.getLogger(FinalProjectCSE360.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //plot button: calls roster.plot()
        if (e.getSource() == plot) {
            if (roster.getRoster().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Cannot plot roster. Roster does not exist");
            } else {
                //roster.plot();
            }
        }
        //date button: when pressed, closes calandar, calls getCVS(), calls roster.add(), calls addCol()
        if (e.getSource() == date) {
            frame.dispose();
            String cvs = getCVS();
            if (!cvs.equalsIgnoreCase("canceled")) {
                try {
                    month = (String) m.getSelectedItem();
                    day = (int) d.getSelectedItem();
                    roster.add(cvs);
                    addCol();
                } catch (IOException ex) {
                    Logger.getLogger(FinalProjectCSE360.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /* Author: Sarah Hills
     * creates a pop-up box where user can choose the csv file they want
     * returns path to file
     *
     * @return String with file path
    */
    public String getCVS() {
        JFileChooser file = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int r = file.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            return file.getSelectedFile().getAbsolutePath();
        }
        return "canceled";
    }

    /* Author: Sarah Hills
     * Creates pop-up that has drop down menus for month and date
     * pop-up closes when button pressed
     *
     * @return void
    */
    public void PickDate() {
        // for creating pop-up frame
        frame = new JFrame("date picker");
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(200, 200);
        
        // creates labels in pop-up
        JLabel lb1 = new JLabel("Select Month");
        lb1.setVisible(true);
        JLabel lb2 = new JLabel("Select Day");
        lb2.setVisible(true);

        // for drop-down menues
        String[] month = {"Jan", "Feb", "March", "April", "May", "June", "July",
            "Aug", "Sept", "Oct", "Nov", "Dec"};
        Integer[] day = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};

        // creates JComboBox(drop-down) and buttons
        m = new JComboBox<String>(month);
        d = new JComboBox<>(day);
        date = new JButton("OK");
        date.addActionListener(this);

        frame.add(lb1);
        frame.add(m);
        frame.add(lb2);
        frame.add(d);
        frame.add(date);
        frame.setLayout(new GridLayout(5, 1));
    }

    /* Author: Sarah Hills
     * this method works with an already existing table; creates a new column 
     *      everytime new attendance column is added to rosterList
     * Adds column to JTable with times for each student
     *
     * @return void
    */
    public void addCol() {
        model.addColumn(String.valueOf(day) + " " + month);
        model.fireTableDataChanged();

        int num = model.getColumnCount();
        for (int i = 0; i < roster.getRoster().size(); i++) {
            model.setValueAt(roster.getRoster().get(i).get(num - 1), i, num - 1);
        }
    }

    /* Author: Sarah Hills
     * This method creates the rows in JTable with the roster array
     * 
     * @return void
    */
    public void addRow() {
        model.setColumnIdentifiers(headers);
        model.fireTableDataChanged();

        String[] row;
        for (int i = 0; i < roster.getRoster().size(); i++) {
            row = roster.getRoster().get(i).toArray(new String[0]);
            model.addRow(row);
        }
        model.fireTableDataChanged();
    }

}
